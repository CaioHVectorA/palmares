/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

/**
 * Automatically generated by palmares on 2024-10-13T04:59:06.260Z
 */

import { models, actions } from '@palmares/databases';


export default {
  name: '002_default_auto_migration_1728795546260',
  database: 'default',
  dependsOn: 'create_palmares_migration_table',
  operations: [
    new actions.CreateModel(
      "Company",
      {
        id: models.fields.AutoField.new().primaryKey(true).allowNull(true).unique(true).dbIndex(true).databaseName("id").underscored(true),
        uuid: models.fields.UuidField.new().primaryKey(false).allowNull(false).unique(false).dbIndex(false).databaseName("uuid").underscored(true),
        name: models.fields.CharField.new().primaryKey(false).allowNull(false).unique(false).dbIndex(false).databaseName("name").underscored(true),
        address: models.fields.CharField.new().primaryKey(false).allowNull(true).unique(false).dbIndex(false).databaseName("address").underscored(true)
      },
      {
        abstract: false,
        underscored: true,
        tableName: "companies",
        managed: true,
        ordering: [],
        indexes: [],
        databases: ["default"],
        customOptions: {}
      }
    ),
    new actions.CreateModel(
      "ProfileType",
      {
        id: models.fields.AutoField.new().primaryKey(true).allowNull(true).unique(true).dbIndex(true).databaseName("id").underscored(true),
        name: models.fields.CharField.new().primaryKey(false).allowNull(false).unique(false).dbIndex(false).databaseName("name").underscored(true)
      },
      {
        abstract: false,
        underscored: true,
        tableName: "profile_type",
        managed: true,
        ordering: [],
        indexes: [],
        databases: ["default"],
        customOptions: {}
      }
    ),
    new actions.CreateModel(
      "User",
      {
        id: models.fields.AutoField.new().primaryKey(true).allowNull(true).unique(true).dbIndex(true).databaseName("id").underscored(true),
        uuid: models.fields.UuidField.new().primaryKey(false).allowNull(false).unique(false).dbIndex(false).databaseName("uuid").underscored(true),
        name: models.fields.CharField.new().primaryKey(false).allowNull(true).unique(false).dbIndex(true).databaseName("name").underscored(true),
        age: models.fields.IntegerField.new().primaryKey(false).allowNull(false).unique(false).dbIndex(true).databaseName("age").underscored(true),
        userType: models.fields.EnumField.new().primaryKey(false).allowNull(false).unique(false).dbIndex(false).databaseName("user_type").underscored(true),
        price: models.fields.DecimalField.new().primaryKey(false).allowNull(true).unique(false).dbIndex(false).databaseName("price").underscored(true),
        isActive: models.fields.BooleanField.new().primaryKey(false).defaultValue(true).allowNull(false).unique(false).dbIndex(false).databaseName("is_active").underscored(true),
        companyId: models.fields.ForeignKeyField.new({relatedTo: "Company", toField: "id", onDelete: models.fields.ON_DELETE.CASCADE, relationName: "company", relatedName: "undefined"}).primaryKey(false).allowNull(false).unique(false).dbIndex(false).databaseName("company_id").underscored(true),
        profileTypeId: models.fields.ForeignKeyField.new({relatedTo: "ProfileType", toField: "id", onDelete: models.fields.ON_DELETE.CASCADE, relationName: "profileType", relatedName: "undefined"}).primaryKey(false).defaultValue(null).allowNull(true).unique(false).dbIndex(false).databaseName("profile_type_id").underscored(true),
        updatedAt: models.fields.DateField.new().primaryKey(false).allowNull(false).unique(false).dbIndex(false).databaseName("updated_at").underscored(true),
        createdAt: models.fields.DateField.new().primaryKey(false).allowNull(false).unique(false).dbIndex(false).databaseName("created_at").underscored(true)
      },
      {
        abstract: false,
        underscored: true,
        tableName: "users",
        managed: true,
        ordering: [],
        indexes: [],
        databases: ["default"],
        customOptions: {}
      }
    )
  ]
};
